def count_pairs_with_sum(lst, target_sum):
    # Function to count pairs of elements with sum equal to target_sum
    count = 0
    seen = {}
    for number in lst:
        complement = target_sum - number
        if complement in seen:
            count += seen[complement]
        if number in seen:
            seen[number] += 1
        else:
            seen[number] = 1
    return count

def calculate_range(numbers):
    # Function to return the range (difference between max and min) of the list
    if len(numbers) < 3:
        return "Range determination not possible"
    return max(numbers) - min(numbers)

def matrix_power(A, m):
    # Function to calculate the m-th power of a square matrix A without using numpy
    n = len(A)
    if not all(len(row) == n for row in A):
        return "Matrix is not square"
   
    # Initialize result as identity matrix
    result = [[1 if i == j else 0 for j in range(n)] for i in range(n)]
   
    # Helper function to multiply two matrices
    def multiply_matrices(X, Y):
        return [[sum(X[i][k] * Y[k][j] for k in range(n)) for j in range(n)] for i in range(n)]
   
    # Exponentiation by squaring
    base = A
    while m > 0:
        if m % 2 == 1:
            result = multiply_matrices(result, base)
        base = multiply_matrices(base, base)
        m //= 2
   
    return result

def highest_occurring_char(s):
    # Function to count the highest occurring character and its count in the string
    s = ''.join(filter(str.isalpha, s))  # Filter out non-alphabet characters
    count_dict = {}
    for char in s:
        if char in count_dict:
            count_dict[char] += 1
        else:
            count_dict[char] = 1
    max_char = max(count_dict, key=count_dict.get)
    max_count = count_dict[max_char]
    return max_char, max_count

# Main program
if __name__ == "__main__":
    # Task 1: Count pairs with sum equal to 10
    lst = [2, 7, 4, 1, 3, 6]
    target_sum = 10
    pair_count = count_pairs_with_sum(lst, target_sum)
    print(f"Number of pairs with sum {target_sum}: {pair_count}")
   
    # Task 2: Calculate range of a list of real numbers
    numbers = [5, 3, 8, 1, 0, 4]
    range_result = calculate_range(numbers)
    print(f"Range of the list {numbers}: {range_result}")
   
    # Task 3: Calculate matrix power
    A = [[1, 2], [3, 4]]
    m = 2
    matrix_result = matrix_power(A, m)
    print(f"The {m}-th power of matrix {A} is:")
    for row in matrix_result:
        print(row)
   
    # Task 4: Count the highest occurring character and its count
    s = "hippopotamus"
    highest_char, highest_count = highest_occurring_char(s)
    print(f"The highest occurring character in '{s}' is '{highest_char}' with a count of {highest_count}")